{"backend_state":"init","connection_file":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/.local/share/jupyter/runtime/kernel-6b2e60c2-80cb-41de-a4c2-60df1648a38f.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"end":1657216100142,"exec_count":1,"id":"8910a6","input":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt","kernel":"ds_env","no_halt":true,"pos":0,"start":1657216098592,"state":"done","type":"cell"}
{"end":1657216100168,"exec_count":2,"id":"6d841b","input":"df = pd.read_csv('heart.csv')","kernel":"ds_env","no_halt":true,"pos":1,"start":1657216100157,"state":"done","type":"cell"}
{"end":1657216100675,"exec_count":3,"id":"41144f","input":"cq1 = df.chol.quantile(0.25)\ncq3 = df.chol.quantile(0.75)\ncIQR = q3 - q1\nlower_limit = cq1 - 1.5 * cIQR\nupper_limit = cq3 + 1.5 * cIQR\nprint(\"Lower limit for outliers in the column chol is \" + str(lower_limit))\nprint(\"Upper limit for outliers in the column chol is \" + str(upper_limit))","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'q3' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [3]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m cq1 \u001b[38;5;241m=\u001b[39m df\u001b[38;5;241m.\u001b[39mchol\u001b[38;5;241m.\u001b[39mquantile(\u001b[38;5;241m0.25\u001b[39m)\n\u001b[1;32m      2\u001b[0m cq3 \u001b[38;5;241m=\u001b[39m df\u001b[38;5;241m.\u001b[39mchol\u001b[38;5;241m.\u001b[39mquantile(\u001b[38;5;241m0.75\u001b[39m)\n\u001b[0;32m----> 3\u001b[0m cIQR \u001b[38;5;241m=\u001b[39m \u001b[43mq3\u001b[49m \u001b[38;5;241m-\u001b[39m q1\n\u001b[1;32m      4\u001b[0m lower_limit \u001b[38;5;241m=\u001b[39m cq1 \u001b[38;5;241m-\u001b[39m \u001b[38;5;241m1.5\u001b[39m \u001b[38;5;241m*\u001b[39m cIQR\n\u001b[1;32m      5\u001b[0m upper_limit \u001b[38;5;241m=\u001b[39m cq3 \u001b[38;5;241m+\u001b[39m \u001b[38;5;241m1.5\u001b[39m \u001b[38;5;241m*\u001b[39m cIQR\n","\u001b[0;31mNameError\u001b[0m: name 'q3' is not defined"]}},"pos":1.25,"start":1657216100176,"state":"done","type":"cell"}
{"end":1657216100698,"exec_count":4,"id":"ea7d93","input":"df=df[df[\"chol\"] < upper_limit]\nsns.boxplot(df[\"chol\"])","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"NameError","evalue":"name 'upper_limit' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [4]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df\u001b[38;5;241m=\u001b[39mdf[df[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mchol\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m<\u001b[39m \u001b[43mupper_limit\u001b[49m]\n\u001b[1;32m      2\u001b[0m sns\u001b[38;5;241m.\u001b[39mboxplot(df[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mchol\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n","\u001b[0;31mNameError\u001b[0m: name 'upper_limit' is not defined"]}},"pos":1.375,"start":1657216100688,"state":"done","type":"cell"}
{"end":1657216100838,"exec_count":5,"id":"797d50","input":"sns.boxplot(df[\"chol\"])","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stderr","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='chol'>"},"exec_count":5},"2":{"data":{"image/png":"0b56cd102165d0c4548135d352de9d62447ba350","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":1.40625,"start":1657216100700,"state":"done","type":"cell"}
{"end":1657216100850,"exec_count":6,"id":"40e536","input":"q1 = df.trestbps.quantile(0.25)\nq3 = df.trestbps.quantile(0.75)\nIQR = q3 - q1\nlower_limit = q1 - 1.5 * IQR\nupper_limit = q3 + 1.5 * IQR\ndf=df[df[\"trestbps\"] < upper_limit]","kernel":"ds_env","no_halt":true,"pos":1.4375,"start":1657216100845,"state":"done","type":"cell"}
{"end":1657216100862,"exec_count":7,"id":"bfbe1e","input":"q1 = df.thalach.quantile(0.25)\nq3 = df.thalach.quantile(0.75)\nIQR = q3 - q1\nlower_limit = q1 - 1.5 * IQR\ndf=df[df[\"thalach\"] > lower_limit]","kernel":"ds_env","no_halt":true,"pos":1.46875,"start":1657216100853,"state":"done","type":"cell"}
{"end":1657216100874,"exec_count":8,"id":"e62aba","input":"oldpeak_q1 = df.oldpeak.quantile(0.25)\noldpeak_q3 = df.oldpeak.quantile(0.75)\noldpeak_IQR = oldpeak_q3 - oldpeak_q1\noldpeak_lower_limit = oldpeak_q1 - 1.5 * oldpeak_IQR\noldpeak_upper_limit = oldpeak_q3 + 1.5 * oldpeak_IQR\ndf=df[df[\"oldpeak\"] < oldpeak_upper_limit]","kernel":"ds_env","no_halt":true,"pos":1.484375,"start":1657216100867,"state":"done","type":"cell"}
{"end":1657216100895,"exec_count":9,"id":"7e150a","input":"df.head()\n\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>sex</th>\n      <th>cp</th>\n      <th>trestbps</th>\n      <th>chol</th>\n      <th>fbs</th>\n      <th>restecg</th>\n      <th>thalach</th>\n      <th>exang</th>\n      <th>oldpeak</th>\n      <th>slope</th>\n      <th>ca</th>\n      <th>thal</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>52</td>\n      <td>1</td>\n      <td>0</td>\n      <td>125</td>\n      <td>212</td>\n      <td>0</td>\n      <td>1</td>\n      <td>168</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>53</td>\n      <td>1</td>\n      <td>0</td>\n      <td>140</td>\n      <td>203</td>\n      <td>1</td>\n      <td>0</td>\n      <td>155</td>\n      <td>1</td>\n      <td>3.1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>70</td>\n      <td>1</td>\n      <td>0</td>\n      <td>145</td>\n      <td>174</td>\n      <td>0</td>\n      <td>1</td>\n      <td>125</td>\n      <td>1</td>\n      <td>2.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>61</td>\n      <td>1</td>\n      <td>0</td>\n      <td>148</td>\n      <td>203</td>\n      <td>0</td>\n      <td>1</td>\n      <td>161</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>62</td>\n      <td>0</td>\n      <td>0</td>\n      <td>138</td>\n      <td>294</td>\n      <td>1</td>\n      <td>1</td>\n      <td>106</td>\n      <td>0</td>\n      <td>1.9</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  slope  \\\n0   52    1   0       125   212    0        1      168      0      1.0      2   \n1   53    1   0       140   203    1        0      155      1      3.1      0   \n2   70    1   0       145   174    0        1      125      1      2.6      0   \n3   61    1   0       148   203    0        1      161      0      0.0      2   \n4   62    0   0       138   294    1        1      106      0      1.9      1   \n\n   ca  thal  target  \n0   2     3       0  \n1   0     3       0  \n2   0     3       0  \n3   1     3       0  \n4   3     2       0  "},"exec_count":9}},"pos":1.4921875,"start":1657216100878,"state":"done","type":"cell"}
{"end":1657216100979,"exec_count":10,"id":"96586f","input":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","kernel":"ds_env","no_halt":true,"pos":1.5,"start":1657216100899,"state":"done","type":"cell"}
{"end":1657216101005,"exec_count":11,"id":"84ad4d","input":"y = df[\"target\"]\nx = df.drop(\"target\", axis = 1)","kernel":"ds_env","no_halt":true,"pos":1.75,"start":1657216100999,"state":"done","type":"cell"}
{"end":1657216101034,"exec_count":12,"id":"1bf6d0","input":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state = 42)","kernel":"ds_env","no_halt":true,"pos":1.875,"start":1657216101023,"state":"done","type":"cell"}
{"end":1657216101097,"exec_count":13,"id":"c2bf8a","input":"scaler = StandardScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","kernel":"ds_env","no_halt":true,"pos":1.9375,"start":1657216101080,"state":"done","type":"cell"}
{"end":1657216101193,"exec_count":14,"id":"36ec6e","input":"from sklearn.linear_model import LogisticRegression","kernel":"ds_env","no_halt":true,"pos":2,"start":1657216101104,"state":"done","type":"cell"}
{"end":1657216101216,"exec_count":15,"id":"552f7e","input":"Regr = LogisticRegression(max_iter= 500)","kernel":"ds_env","no_halt":true,"pos":3,"start":1657216101209,"state":"done","type":"cell"}
{"end":1657216101244,"exec_count":16,"id":"08551a","input":"Regr.fit(x_train,y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=500)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div>","text/plain":"LogisticRegression(max_iter=500)"},"exec_count":16}},"pos":4,"start":1657216101234,"state":"done","type":"cell"}
{"end":1657216101262,"exec_count":17,"id":"06e7f6","input":"yRegr_hat= Regr.predict(x_test)\nyRegr_hat","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n       1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n       1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n       0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1,\n       0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0])"},"exec_count":17}},"pos":5,"start":1657216101254,"state":"done","type":"cell"}
{"end":1657216101285,"exec_count":18,"id":"565309","input":"np.array(y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"array([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n       0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n       1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n       0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n       0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n       0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n       1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n       1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1])"},"exec_count":18}},"pos":6,"start":1657216101282,"state":"done","type":"cell"}
{"end":1657216101299,"exec_count":19,"id":"8e6481","input":"from sklearn.metrics import confusion_matrix","kernel":"ds_env","no_halt":true,"pos":6.5,"start":1657216101296,"state":"done","type":"cell"}
{"end":1657216101484,"exec_count":20,"id":"de5050","input":"plt.figure(figsize=(10,10))\nsns.heatmap(confusion_matrix(y_test,yRegr_hat), annot= True, fmt = 'g')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":20},"1":{"data":{"image/png":"c3f4cc93f200f9e806982369c2ae8e5930ec12eb","text/plain":"<Figure size 720x720 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":7,"start":1657216101305,"state":"done","type":"cell"}
{"end":1657216101494,"exec_count":21,"id":"19a419","input":"#Score\nscoreRegr = Regr.score(x_test,y_test)\nprint(scoreRegr)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"0.8497409326424871\n"}},"pos":8,"start":1657216101490,"state":"done","type":"cell"}
{"end":1657216101504,"exec_count":22,"id":"391064","input":"#Mean Squared Error\ntotal_squared_error = (np.sum((y_test - yRegr_hat)**2))\nmean_squared_error = total_squared_error/len(y_test)\nprint(mean_squared_error)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"0.15025906735751296\n"}},"pos":9,"start":1657216101500,"state":"done","type":"cell"}
{"end":1657216101513,"exec_count":23,"id":"ff2eb4","input":"#precison  TP/TP+FP\nprecision = 69/(69+17)\nprint(precision)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"0.8023255813953488\n"}},"pos":10,"start":1657216101509,"state":"done","type":"cell"}
{"end":1657216101522,"exec_count":24,"id":"a9d5ba","input":"#recall TP/TP+FN\nrecall = 69/(69+12)\nprint(recall)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"0.8518518518518519\n"}},"pos":11,"scrolled":true,"start":1657216101518,"state":"done","type":"cell"}
{"end":1657216101535,"exec_count":25,"id":"6b13ac","input":"#F1 (2 x precision x recall) / (precision + recall)\n\n(2*precision*recall)/(precision +recall)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.8263473053892216"},"exec_count":25}},"pos":12,"start":1657216101525,"state":"done","type":"cell"}
{"end":1657216101549,"exec_count":26,"id":"e6a06a","input":"#accuracy (TP+TN)/(TP+FN+TN+FP)\n\n(69+95)/(69+95+12+17)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.8497409326424871"},"exec_count":26}},"pos":13,"start":1657216101538,"state":"done","type":"cell"}
{"end":1657216101833,"exec_count":27,"id":"ed7cd1","input":"plt.figure(figsize=(15,5))\nsns.boxplot(data=df,orient='h')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":27},"1":{"data":{"image/png":"b7ee6b42c062de91f8e98e3e2b24e6b0225e1db4","text/plain":"<Figure size 1080x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":14,"start":1657216101553,"state":"done","type":"cell"}
{"id":"02ae5a","input":"","pos":19,"type":"cell"}
{"id":"738db5","input":"","pos":16,"type":"cell"}
{"id":"73fe4c","input":"","pos":17,"type":"cell"}
{"id":"7d24e3","input":"","pos":15,"type":"cell"}
{"id":"bc5b7f","input":"","pos":18,"type":"cell"}
{"id":"ffa4a0","input":"","pos":20,"type":"cell"}
{"id":0,"time":1657563843125,"type":"user"}
{"last_load":1657214363110,"type":"file"}