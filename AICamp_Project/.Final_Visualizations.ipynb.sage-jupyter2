{"backend_state":"running","connection_file":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/.local/share/jupyter/runtime/kernel-fc2fe46a-6a2d-40a6-9b12-8b84990e4fe0.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657647457772,"exec_count":1,"id":"a68d65","input":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt","kernel":"ds_env","no_halt":true,"pos":1,"start":1657647456205,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647457811,"exec_count":2,"id":"d2d0cb","input":"df = pd.read_csv('heart.csv')\ndf.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>sex</th>\n      <th>cp</th>\n      <th>trestbps</th>\n      <th>chol</th>\n      <th>fbs</th>\n      <th>restecg</th>\n      <th>thalach</th>\n      <th>exang</th>\n      <th>oldpeak</th>\n      <th>slope</th>\n      <th>ca</th>\n      <th>thal</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>52</td>\n      <td>1</td>\n      <td>0</td>\n      <td>125</td>\n      <td>212</td>\n      <td>0</td>\n      <td>1</td>\n      <td>168</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>53</td>\n      <td>1</td>\n      <td>0</td>\n      <td>140</td>\n      <td>203</td>\n      <td>1</td>\n      <td>0</td>\n      <td>155</td>\n      <td>1</td>\n      <td>3.1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>70</td>\n      <td>1</td>\n      <td>0</td>\n      <td>145</td>\n      <td>174</td>\n      <td>0</td>\n      <td>1</td>\n      <td>125</td>\n      <td>1</td>\n      <td>2.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>61</td>\n      <td>1</td>\n      <td>0</td>\n      <td>148</td>\n      <td>203</td>\n      <td>0</td>\n      <td>1</td>\n      <td>161</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>62</td>\n      <td>0</td>\n      <td>0</td>\n      <td>138</td>\n      <td>294</td>\n      <td>1</td>\n      <td>1</td>\n      <td>106</td>\n      <td>0</td>\n      <td>1.9</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  slope  \\\n0   52    1   0       125   212    0        1      168      0      1.0      2   \n1   53    1   0       140   203    1        0      155      1      3.1      0   \n2   70    1   0       145   174    0        1      125      1      2.6      0   \n3   61    1   0       148   203    0        1      161      0      0.0      2   \n4   62    0   0       138   294    1        1      106      0      1.9      1   \n\n   ca  thal  target  \n0   2     3       0  \n1   0     3       0  \n2   0     3       0  \n3   1     3       0  \n4   3     2       0  "},"exec_count":2}},"pos":2,"start":1657647457786,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647457830,"exec_count":3,"id":"120436","input":"df.tail()\n","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>sex</th>\n      <th>cp</th>\n      <th>trestbps</th>\n      <th>chol</th>\n      <th>fbs</th>\n      <th>restecg</th>\n      <th>thalach</th>\n      <th>exang</th>\n      <th>oldpeak</th>\n      <th>slope</th>\n      <th>ca</th>\n      <th>thal</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1020</th>\n      <td>59</td>\n      <td>1</td>\n      <td>1</td>\n      <td>140</td>\n      <td>221</td>\n      <td>0</td>\n      <td>1</td>\n      <td>164</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1021</th>\n      <td>60</td>\n      <td>1</td>\n      <td>0</td>\n      <td>125</td>\n      <td>258</td>\n      <td>0</td>\n      <td>0</td>\n      <td>141</td>\n      <td>1</td>\n      <td>2.8</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1022</th>\n      <td>47</td>\n      <td>1</td>\n      <td>0</td>\n      <td>110</td>\n      <td>275</td>\n      <td>0</td>\n      <td>0</td>\n      <td>118</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1023</th>\n      <td>50</td>\n      <td>0</td>\n      <td>0</td>\n      <td>110</td>\n      <td>254</td>\n      <td>0</td>\n      <td>0</td>\n      <td>159</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1024</th>\n      <td>54</td>\n      <td>1</td>\n      <td>0</td>\n      <td>120</td>\n      <td>188</td>\n      <td>0</td>\n      <td>1</td>\n      <td>113</td>\n      <td>0</td>\n      <td>1.4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"      age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  \\\n1020   59    1   1       140   221    0        1      164      1      0.0   \n1021   60    1   0       125   258    0        0      141      1      2.8   \n1022   47    1   0       110   275    0        0      118      1      1.0   \n1023   50    0   0       110   254    0        0      159      0      0.0   \n1024   54    1   0       120   188    0        1      113      0      1.4   \n\n      slope  ca  thal  target  \n1020      2   0     2       1  \n1021      1   1     3       0  \n1022      1   1     2       0  \n1023      2   0     2       1  \n1024      1   1     3       0  "},"exec_count":3}},"pos":3,"start":1657647457817,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647457843,"exec_count":4,"id":"c7d71f","input":"#Graph 1 - heatmap","kernel":"ds_env","no_halt":true,"pos":7,"start":1657647457837,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647459386,"exec_count":6,"id":"073064","input":"#Graph 2 - grid of scatterplots of different features against each other, using target to color the points","kernel":"ds_env","no_halt":true,"pos":10,"start":1657647459383,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647459548,"exec_count":7,"id":"94b341","input":"pgraph = px.scatter_matrix(df, dimensions=[\"age\", \"thalach\", \"oldpeak\"], color=\"target\", title=\"Correlations Between Heart Disease and Other Factors\")\npgraph.show()\n# Try picking numerical variables (thalach, oldpeak, age, etc)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"57683dcb66722a574a71e271b3e134042e7f81de"}}},"pos":11,"scrolled":true,"start":1657647459391,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647459609,"exec_count":8,"id":"91e24a","input":"pgraph.write_html(\"ScatterplotsVisualizations.html\")","kernel":"ds_env","no_halt":true,"pos":12,"start":1657647459557,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647459620,"exec_count":9,"id":"45a1a9","input":"# ngraph = px.scatter_matrix(df, dimensions=[\"thal\", \"ca\", \"oldpeak\", \"exang\", \"sex\", \"age\"], color=\"target\", title=\"Negative Correlations Between Heart Disease and Other Factors\")\n# ngraph.show()","kernel":"ds_env","no_halt":true,"pos":14,"start":1657647459613,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647459626,"exec_count":10,"id":"75f408","input":"#Graph 3 - grid of histograms showing different distrubitions of our data and using target as color","kernel":"ds_env","no_halt":true,"pos":15,"start":1657647459622,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647460186,"exec_count":11,"id":"bd41c0","input":"\nhisto = px.hist_matrix(df, dimensions = ['slope','thalach','cp','chol'], color ='target', symbol = 'target', title ='Histogram of Correlations Between Heart Disease and Multiple Factors')\nhisto.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"ename":"AttributeError","evalue":"module 'plotly.express' has no attribute 'hist_matrix'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","Input \u001b[0;32mIn [11]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m histo \u001b[38;5;241m=\u001b[39m \u001b[43mpx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mhist_matrix\u001b[49m(df, dimensions \u001b[38;5;241m=\u001b[39m [\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mslope\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mthalach\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcp\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mchol\u001b[39m\u001b[38;5;124m'\u001b[39m], color \u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m'\u001b[39m, symbol \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m'\u001b[39m, title \u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mHistogram of Correlations Between Heart Disease and Multiple Factors\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m      2\u001b[0m histo\u001b[38;5;241m.\u001b[39mshow()\n","\u001b[0;31mAttributeError\u001b[0m: module 'plotly.express' has no attribute 'hist_matrix'"]}},"pos":16,"start":1657647459629,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647460207,"exec_count":12,"id":"064f49","input":"dropped =['target']\nnewdf = df.drop(dropped, axis=1, inplace = False)\nnewdf.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>sex</th>\n      <th>cp</th>\n      <th>trestbps</th>\n      <th>chol</th>\n      <th>fbs</th>\n      <th>restecg</th>\n      <th>thalach</th>\n      <th>exang</th>\n      <th>oldpeak</th>\n      <th>slope</th>\n      <th>ca</th>\n      <th>thal</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>52</td>\n      <td>1</td>\n      <td>0</td>\n      <td>125</td>\n      <td>212</td>\n      <td>0</td>\n      <td>1</td>\n      <td>168</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>53</td>\n      <td>1</td>\n      <td>0</td>\n      <td>140</td>\n      <td>203</td>\n      <td>1</td>\n      <td>0</td>\n      <td>155</td>\n      <td>1</td>\n      <td>3.1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>70</td>\n      <td>1</td>\n      <td>0</td>\n      <td>145</td>\n      <td>174</td>\n      <td>0</td>\n      <td>1</td>\n      <td>125</td>\n      <td>1</td>\n      <td>2.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>61</td>\n      <td>1</td>\n      <td>0</td>\n      <td>148</td>\n      <td>203</td>\n      <td>0</td>\n      <td>1</td>\n      <td>161</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>62</td>\n      <td>0</td>\n      <td>0</td>\n      <td>138</td>\n      <td>294</td>\n      <td>1</td>\n      <td>1</td>\n      <td>106</td>\n      <td>0</td>\n      <td>1.9</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  slope  \\\n0   52    1   0       125   212    0        1      168      0      1.0      2   \n1   53    1   0       140   203    1        0      155      1      3.1      0   \n2   70    1   0       145   174    0        1      125      1      2.6      0   \n3   61    1   0       148   203    0        1      161      0      0.0      2   \n4   62    0   0       138   294    1        1      106      0      1.9      1   \n\n   ca  thal  \n0   2     3  \n1   0     3  \n2   0     3  \n3   1     3  \n4   3     2  "},"exec_count":12}},"pos":17,"start":1657647460193,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647460217,"exec_count":13,"id":"52004e","input":"df.columns[:-2][3]","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"'trestbps'"},"exec_count":13}},"pos":18,"start":1657647460212,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647465067,"exec_count":15,"id":"010d5c","input":"infected = df[df['target']==1]\n\ndef draw_histograms(df, variables, n_rows, n_cols, color):\n    fig=plt.figure()\n    for i, var_name in enumerate(variables):\n        ax=fig.add_subplot(n_rows,n_cols,i+1)\n        df[var_name].hist(bins=10,ax=ax, figsize = (10,10) )\n        ax.set_title(var_name)\n    fig.tight_layout()\n    plt.show()\n\n\ndraw_histograms(df, df.columns, 4, 4,color = 'target')","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"b12a16b8c0d18b3708d32660e534c4b36b4d16d7","text/plain":"<Figure size 720x720 with 14 Axes>"},"metadata":{"needs_background":"light"}}},"pos":20,"start":1657647463352,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647466814,"exec_count":16,"id":"a71cf7","input":"\n\ninfected = df[df['target']==1]\n\ndef draw_histograms(df, variables, n_rows, n_cols):\n    fig=plt.figure()\n    for i, var_name in enumerate(variables):\n        ax=fig.add_subplot(n_rows,n_cols,i+1)\n        df[var_name].hist(bins=10,ax=ax, figsize = (10,10) )\n        ax.set_title(var_name)\n    fig.tight_layout()\n    plt.show()\n\n\ndraw_histograms(df, df.columns, 4, 4,)\n#These histograms represent the data of those with and without heart disease","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"image/png":"b12a16b8c0d18b3708d32660e534c4b36b4d16d7","text/plain":"<Figure size 720x720 with 14 Axes>"},"metadata":{"needs_background":"light"}}},"pos":22,"start":1657647465091,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647644780,"exec_count":18,"id":"7b385d","input":"Histfig, axes = plt.subplots(3, 4, figsize =(20,10))\nHistfig.suptitle(\"Histograms of Multiple Factors in Heart Disease\")\n\ncnt = 0 \nfor i in range(3):\n    for j in range(4):\n        sns.histplot(ax = axes[i,j], data=df, x=df.columns[:-2][cnt], hue='target')\n        cnt+=1\n\n#In our data, the histogram for thalach seems to show that a thalach level of 150 differentiates a person with heart disease and a person without it. \n#For oldpeak, there is a spike of peopel with heart disease when their oldpeak level is 0. As oldpeak level increases, the amount of people with heart disease drastically decreases in a negative association. \n#For our age histogram, the data shows that people in their early fourties and fifties have the highest frequency of heart disease, with a bimodal peak. \n#The sex histogram shows that females are at a greater risk of contracting heart disease compared to men. Despite there being a lower sample number in the dataset, the amount of females affected are almost as high as men. \n#Our ca histogram shows that people with 0 major vessels infected are at the highest risk of getting heart disease.\n#Our slope histogram shows that at a slope of level 2, there is a high amount of people with heart disease. There is also a positive association in which as slope level increase, so do the amount of people that have heart disease. ","kernel":"ds_env","output":{"0":{"data":{"image/png":"263b51f306aac1e21d959b094b5bed7af62efa61","text/plain":"<Figure size 1440x720 with 12 Axes>"},"metadata":{"needs_background":"light"}}},"pos":19,"start":1657647641356,"state":"done","type":"cell"}
{"cell_type":"code","end":1657647745063,"exec_count":23,"id":"e0f6c8","input":"fig = px.imshow(df.corr(), text_auto=True, aspect = \"auto\", color_continuous_scale='Viridis', labels = dict(x = \"Factors of Heart Disease\", color = \"Correlation\"), x = [\"age\", 'sex', 'chest pain', 'resting blood pressure', 'cholesterol', 'fasting blood sugar', 'resting electrocardiographic results', 'max heart rate', 'exercise induced angina', 'ST depression induced by exercise relative to rest', 'the slope of the peak exercise ST segment', 'number of major vessels (0-3) colored by flourosopy', 'thalassemia', 'heart disease'])\nfig.update_xaxes(side=\"top\")\nfig.show()\nfig.write_html(\"path/to/file.html\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"4c9ed7300b37344d74ebd533eccbae3926f774e8"}},"1":{"ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: 'path/to/file.html'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","Input \u001b[0;32mIn [23]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m fig\u001b[38;5;241m.\u001b[39mupdate_xaxes(side\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtop\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      3\u001b[0m fig\u001b[38;5;241m.\u001b[39mshow()\n\u001b[0;32m----> 4\u001b[0m \u001b[43mfig\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwrite_html\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mpath/to/file.html\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/basedatatypes.py:3708\u001b[0m, in \u001b[0;36mBaseFigure.write_html\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3593\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   3594\u001b[0m \u001b[38;5;124;03mWrite a figure to an HTML file representation\u001b[39;00m\n\u001b[1;32m   3595\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   3704\u001b[0m \u001b[38;5;124;03m    Representation of figure as an HTML div string\u001b[39;00m\n\u001b[1;32m   3705\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   3706\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mplotly\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mio\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpio\u001b[39;00m\n\u001b[0;32m-> 3708\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mpio\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwrite_html\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/plotly/io/_html.py:542\u001b[0m, in \u001b[0;36mwrite_html\u001b[0;34m(fig, file, config, auto_play, include_plotlyjs, include_mathjax, post_script, full_html, animation_opts, validate, default_width, default_height, auto_open, div_id)\u001b[0m\n\u001b[1;32m    540\u001b[0m \u001b[38;5;66;03m# Write HTML string\u001b[39;00m\n\u001b[1;32m    541\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m path \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m--> 542\u001b[0m     \u001b[43mpath\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwrite_text\u001b[49m\u001b[43m(\u001b[49m\u001b[43mhtml_str\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    543\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    544\u001b[0m     file\u001b[38;5;241m.\u001b[39mwrite(html_str)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/pathlib.py:1255\u001b[0m, in \u001b[0;36mPath.write_text\u001b[0;34m(self, data, encoding, errors)\u001b[0m\n\u001b[1;32m   1252\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(data, \u001b[38;5;28mstr\u001b[39m):\n\u001b[1;32m   1253\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdata must be str, not \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m'\u001b[39m \u001b[38;5;241m%\u001b[39m\n\u001b[1;32m   1254\u001b[0m                     data\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__class__\u001b[39m\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m)\n\u001b[0;32m-> 1255\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43mmode\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mw\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m f:\n\u001b[1;32m   1256\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m f\u001b[38;5;241m.\u001b[39mwrite(data)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/pathlib.py:1222\u001b[0m, in \u001b[0;36mPath.open\u001b[0;34m(self, mode, buffering, encoding, errors, newline)\u001b[0m\n\u001b[1;32m   1220\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_closed:\n\u001b[1;32m   1221\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_raise_closed()\n\u001b[0;32m-> 1222\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mio\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbuffering\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnewline\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1223\u001b[0m \u001b[43m               \u001b[49m\u001b[43mopener\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_opener\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/pathlib.py:1078\u001b[0m, in \u001b[0;36mPath._opener\u001b[0;34m(self, name, flags, mode)\u001b[0m\n\u001b[1;32m   1076\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_opener\u001b[39m(\u001b[38;5;28mself\u001b[39m, name, flags, mode\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0o666\u001b[39m):\n\u001b[1;32m   1077\u001b[0m     \u001b[38;5;66;03m# A stub for the opener argument to built-in open()\u001b[39;00m\n\u001b[0;32m-> 1078\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_accessor\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mflags\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m)\u001b[49m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path/to/file.html'"]}},"pos":8,"scrolled":true,"start":1657647744543,"state":"done","type":"cell"}
{"cell_type":"code","id":"f21a76","input":"","pos":21,"type":"cell"}
{"cell_type":"code","id":"f97db2","input":"","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"1d57cc","input":"We used a matrix scatter plot to compare variables we thought were most directly correlated to\nchanges in heart disease. We colored the graphs to differentiate between people who did \\(yellow\\) and did not \\(blue\\) have heart disease. \n\nThe age and thalach appear to have a negative correlation to each other; age is mostly spread out, but those with higher heart rates tend to have heart disease.\n\nThe old peak and\nage do not have much correlation, people with heart disease tend to have lower old peak measurements.\n\nThe thalach and old peak do not have much correlation, people with heart disease tend to have lower old peak measurements.\n\n","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"20042a","input":"things to have:legend, title, labeling the axis\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"665353","input":"The reason we're using a  Heatmap to portray the factors of heart disease is because it displays the data in an easy\\-to\\-digest way. The color scale tells a reader what factors are correlated with each other and with heart disease, making it easier to find what the problem is. Our goal is to spread awareness about heart disease and help people identify if they may be at a higher risk for heart disease, and understanding the factors and correlations are one step to do that. \n\nThe most positively correlated variables to people with heart disease are chest pain, thalach \\(max heart rate\\), and slope of peak exercise in ST segments. This makes sense, as pain in the heart is a sign of heart disease, and heart rate and exercise also play a big part.  The most negatively correlated variables to people with heart disease are oldpeak depression and the number of major vessels colored by flouroscopy.\nSome variables that should be disregarded are thalassemia, sex, and exercise induced angina because of their fixed numerical representations \\(e.g. male = 1 and female = 0 \\) that do not translate well on a graph/heat map when compared with other values.\nFirst, we created a correlation table to see how different features correlated with the wealth of nations. Some surprising results were that the number of phones per hundred people and male height in cm were highly correlated with GDP per capita. Meanwhile, birthrate and infant mortality were highly negatively correlated\n\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"6e87e0","input":"goal: to make interactive plots that are easy to understand and aesthetically pleasing using the plotly package\n\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"887b59","input":"possible graphs: heatmap, scatterplot, histogram, boxplot\n","pos":4,"type":"cell"}
{"end":1657647738437,"exec_count":22,"id":"3ea366","input":"fig.write_html(\"Heatmap.html\")","kernel":"ds_env","pos":9.5,"start":1657647738402,"state":"done","type":"cell"}
{"id":0,"time":1657649883079,"type":"user"}
{"last_load":1657645323805,"type":"file"}