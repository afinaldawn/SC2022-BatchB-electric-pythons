{"backend_state":"init","connection_file":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/.local/share/jupyter/runtime/kernel-672da9ed-e6c6-4297-b2b6-6f32a205704b.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"44c13f","input":"","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5580a8","input":"","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b756ef","input":"","pos":39,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"0fca0b","input":"q1 = df.chol.quantile(0.25)\nq3 = df.chol.quantile(0.75)\nIQR = q3 - q1\nlower_limit = q1 - 1.5 * IQR\nupper_limit = q3 + 1.5 * IQR\nprint(\"Lower limit for outliers in the column chol is \" + str(lower_limit))\nprint(\"Upper limit for outliers in the column chol is \" + str(upper_limit))","output":{"0":{"name":"stdout","output_type":"stream","text":"Lower limit for outliers in the column chol is 115.0\nUpper limit for outliers in the column chol is 371.0\n"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":101,"id":"3b41d3","input":"df.oldpeak.quantile(0.75)\noldpeak_IQR * 1.5 + df.oldpeak.quantile(0.75)","output":{"0":{"data":{"text/plain":"4.075"},"exec_count":101,"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":102,"id":"4517c8","input":"# Sophia & Hikari\ndf.oldpeak.describe()\noldpeak_q1 = df.oldpeak.quantile(0.25)\noldpeak_q3 = df.oldpeak.quantile(0.75)\noldpeak_IQR = oldpeak_q3 - oldpeak_q1\noldpeak_lower_limit = oldpeak_q1 - 1.5 * oldpeak_IQR\noldpeak_upper_limit = oldpeak_q3 + 1.5 * oldpeak_IQR\nprint(\"Lower limit for outliers in the column chol is \" + str(oldpeak_lower_limit))\nprint(\"Upper limit for outliers in the column chol is \" + str(oldpeak_upper_limit))\ndf=df[df[\"oldpeak\"] < oldpeak_upper_limit]\nsns.boxplot(df[\"oldpeak\"])","output":{"0":{"name":"stdout","output_type":"stream","text":"Lower limit for outliers in the column chol is -2.4000000000000004\nUpper limit for outliers in the column chol is 4.0\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"2":{"data":{"text/plain":"<AxesSubplot:xlabel='oldpeak'>"},"exec_count":102,"output_type":"execute_result"},"3":{"data":{"image/png":"dd52a8f43d60d19ead6cf49a469035fe7c5c5bb9","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":102,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":31,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":103,"id":"1dfef0","input":"df.thal.describe()\nsns.boxplot(df.thal)","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='thal'>"},"exec_count":103,"output_type":"execute_result"},"2":{"data":{"image/png":"19d198f029d914a4514a3652134f8744fe389c43","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":103,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":104,"id":"d37544","input":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"07fbb0","input":"df = pd.read_csv('heart.csv')","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":106,"id":"609dd8","input":"sns.boxplot(df[\"ca\"])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='ca'>"},"exec_count":106,"output_type":"execute_result"},"2":{"data":{"image/png":"c4246903c64131fca6bfbce4fca86b811161e4da","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":106,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":36,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":107,"id":"f74874","input":"sns.boxplot(df[\"slope\"])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='slope'>"},"exec_count":107,"output_type":"execute_result"},"2":{"data":{"image/png":"bff012caa0c5c19caf781c3d872dd00226e6e8ca","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":107,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"909d9b","input":"df=df[df[\"chol\"] < upper_limit]\nsns.boxplot(df[\"chol\"])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='chol'>"},"exec_count":13,"output_type":"execute_result"},"2":{"data":{"image/png":"bd145278975f3aae3b5d79f345c32046492e332e","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":13,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":8,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"18a6e6","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach',\n       'exang', 'oldpeak', 'slope', 'ca', 'thal', 'target'],\n      dtype='object')"},"exec_count":14,"output_type":"execute_result"}},"pos":10,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"22d2f2","input":"plt.figure(figsize=(15,5))\nsns.boxplot(data=df,orient='h')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":17,"output_type":"execute_result"},"1":{"data":{"image/png":"8cd9da890928fbe53f1352b20367944efe4be76d","text/plain":"<Figure size 1080x360 with 1 Axes>"},"exec_count":17,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"d9b7ec","input":"sns.boxplot(df[\"chol\"])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='chol'>"},"exec_count":18,"output_type":"execute_result"},"2":{"data":{"image/png":"0b56cd102165d0c4548135d352de9d62447ba350","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":18,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"8389d3","input":"df.chol.describe()","output":{"0":{"data":{"text/plain":"count    1025.00000\nmean      246.00000\nstd        51.59251\nmin       126.00000\n25%       211.00000\n50%       240.00000\n75%       275.00000\nmax       564.00000\nName: chol, dtype: float64"},"exec_count":19,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"294157","input":"#Danh and Vincent\ndf.age.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean       54.434146\nstd         9.072290\nmin        29.000000\n25%        48.000000\n50%        56.000000\n75%        61.000000\nmax        77.000000\nName: age, dtype: float64"},"exec_count":21,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"ba4eb3","input":"df.sex.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean        0.695610\nstd         0.460373\nmin         0.000000\n25%         0.000000\n50%         1.000000\n75%         1.000000\nmax         1.000000\nName: sex, dtype: float64"},"exec_count":22,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"8fdabf","input":"df.cp.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean        0.942439\nstd         1.029641\nmin         0.000000\n25%         0.000000\n50%         1.000000\n75%         2.000000\nmax         3.000000\nName: cp, dtype: float64"},"exec_count":23,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"421cf6","input":"df.trestbps.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean      131.611707\nstd        17.516718\nmin        94.000000\n25%       120.000000\n50%       130.000000\n75%       140.000000\nmax       200.000000\nName: trestbps, dtype: float64"},"exec_count":24,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"202395","input":"#Alex\ndf.thalach.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean      149.114146\nstd        23.005724\nmin        71.000000\n25%       132.000000\n50%       152.000000\n75%       166.000000\nmax       202.000000\nName: thalach, dtype: float64"},"exec_count":26,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"a9693d","input":"df.slope.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean        1.385366\nstd         0.617755\nmin         0.000000\n25%         1.000000\n50%         1.000000\n75%         2.000000\nmax         2.000000\nName: slope, dtype: float64"},"exec_count":31,"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"9d6359","input":"df.ca.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean        0.754146\nstd         1.030798\nmin         0.000000\n25%         0.000000\n50%         0.000000\n75%         1.000000\nmax         4.000000\nName: ca, dtype: float64"},"exec_count":34,"output_type":"execute_result"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"94ec31","input":"#Evan\nsns.boxplot(df[\"fbs\"])\ndf.fbs.describe()","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"count    1025.000000\nmean        0.149268\nstd         0.356527\nmin         0.000000\n25%         0.000000\n50%         0.000000\n75%         0.000000\nmax         1.000000\nName: fbs, dtype: float64"},"exec_count":37,"output_type":"execute_result"},"2":{"data":{"image/png":"dbfb810888c80888602d119cf06558181531fc3d","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":37,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"540f6e","input":"df.exang.describe()","output":{"0":{"data":{"text/plain":"count    1025.000000\nmean        0.336585\nstd         0.472772\nmin         0.000000\n25%         0.000000\n50%         0.000000\n75%         1.000000\nmax         1.000000\nName: exang, dtype: float64"},"exec_count":38,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"0ac359","input":"q1t = df.trestbps.quantile(0.25)\nq3t = df.trestbps.quantile(0.75)\nIQR = q3t-q1t\n\nlower_limitt = q1t- (1.5*IQR)\nupper_limitt = q3t+ (1.5*IQR)\nprint(\"Lower limit for outliers in the column trestbps is \" + str(lower_limitt))\nprint(\"Upper limit for outliers in the column trestbps is \" + str(upper_limitt))","output":{"0":{"name":"stdout","output_type":"stream","text":"Lower limit for outliers in the column trestbps is 90.0\nUpper limit for outliers in the column trestbps is 170.0\n"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"fefba4","input":"sns.boxplot(df['restecg'])\ndf.restecg.describe()","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"count    1025.000000\nmean        0.529756\nstd         0.527878\nmin         0.000000\n25%         0.000000\n50%         1.000000\n75%         1.000000\nmax         2.000000\nName: restecg, dtype: float64"},"exec_count":45,"output_type":"execute_result"},"2":{"data":{"image/png":"895091d167f5cdf3469e07824600b75378e7b118","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":45,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"916f8d","input":"q1cp = df.cp.quantile(0.25)\nq3cp = df.cp.quantile(0.75)\nIQRcp = q3cp - q1cp\nlower_limitcp = q1cp - 1.5 * IQRcp\nupper_limitcp = q3cp + 1.5 * IQRcp\nprint(\"Lower limit for outliers in the column chol is \" + str(lower_limitcp))\nprint(\"Upper limit for outliers in the column chol is \" + str(upper_limitcp))\nsns.boxplot(df['cp'])","output":{"0":{"name":"stdout","output_type":"stream","text":"Lower limit for outliers in the column chol is -3.0\nUpper limit for outliers in the column chol is 5.0\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"2":{"data":{"text/plain":"<AxesSubplot:xlabel='cp'>"},"exec_count":46,"output_type":"execute_result"},"3":{"data":{"image/png":"9a009424fed39e6fa17ce7b29ef23698fdcc1923","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":46,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"ac9ae3","input":"sns.boxplot(df[\"thalach\"])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='thalach'>"},"exec_count":56,"output_type":"execute_result"},"2":{"data":{"image/png":"3ec67ad128537b36ab9d3cc5459defcc5e7b8b19","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":56,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"f00888","input":"thalach_q1 = df.thalach.quantile(0.25)\nthalach_q3 = df.thalach.quantile(0.75)\nthalach_IQR = thalach_q3 - thalach_q1\nth_lower_limit = thalach_q1 - 1.5 * thalach_IQR\nth_upper_limit = thalach_q3 + 1.5 * thalach_IQR\nprint(\"Lower limit for outliers in the column thalach is \" + str(th_lower_limit))\nprint(\"Upper limit for outliers in the column thalach \" + str(th_upper_limit))\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Lower limit for outliers in the column thalach is 81.0\nUpper limit for outliers in the column thalach 326.0\n"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"88737f","input":"df=df[df[\"thalach\"] > th_lower_limit]\nsns.boxplot(df[\"thalach\"])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='thalach'>"},"exec_count":71,"output_type":"execute_result"},"2":{"data":{"image/png":"04676e8b1943a7aa0244a60026e13d0f66f62449","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":71,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":79,"id":"c8ea23","input":"sns.boxplot(df[\"exang\"])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='exang'>"},"exec_count":79,"output_type":"execute_result"},"2":{"data":{"image/png":"450484f3fbfcf526fbedb426a7e71579159f5c3c","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":79,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":82,"id":"c51f60","input":"df = df[df['trestbps']< upper_limitt]\ndf.head()\nsns.boxplot(df['trestbps'])","output":{"0":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"1":{"data":{"text/plain":"<AxesSubplot:xlabel='trestbps'>"},"exec_count":82,"output_type":"execute_result"},"2":{"data":{"image/png":"b3e4ee6f798423b6eb9a6abd76cde1fd94a2e493","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":82,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":85,"id":"750ffe","input":"q1s = df.sex.quantile(0.25)\nq3s = df.sex.quantile(0.75)\nIQRs = q3 - q1\nlower_limits = q1s - 1.5 * IQRs\nupper_limits = q3s + 1.5 * IQRs\nprint(\"Lower limit for outliers in the column sex is \" + str(lower_limits))\nprint(\"Upper limit for outliers in the column sex is \" + str(upper_limits))\n\nsns.boxplot(df['sex'])","output":{"0":{"name":"stdout","output_type":"stream","text":"Lower limit for outliers in the column sex is -96.0\nUpper limit for outliers in the column sex is 97.0\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"2":{"data":{"text/plain":"<AxesSubplot:xlabel='sex'>"},"exec_count":85,"output_type":"execute_result"},"3":{"data":{"image/png":"be6e903d0c93ebb1ebe73899790e8a3ecec378d8","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":85,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"d0079e","input":"q1a = df.age.quantile(0.25)\nq3a = df.age.quantile(0.75)\nIQR = q3a -q1a\n\nlower_limita = q1a - (1.5*IQR)\nupper_limita = q3a + (1.5*IQR)\nprint(\"Lower limit for outliers in the column age is \" + str(lower_limita))\nprint(\"Upper limit for outliers in the column age is \" + str(upper_limita))\nsns.boxplot(df['age'])","output":{"0":{"name":"stdout","output_type":"stream","text":"Lower limit for outliers in the column age is 26.0\nUpper limit for outliers in the column age is 82.0\n"},"1":{"name":"stderr","output_type":"stream","text":"/projects/789aa3e5-de8c-43a9-9498-6199f18e94f7/miniconda3/envs/ds_env/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n"},"2":{"data":{"text/plain":"<AxesSubplot:xlabel='age'>"},"exec_count":87,"output_type":"execute_result"},"3":{"data":{"image/png":"54c279c228cbe35b0ca996e07ed69da54d5f84ef","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":87,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"markdown","id":"0a609f","input":"## Outliers in our data","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"233e52","input":"## Example to Remove Outliers","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"41aa78","input":"### Code Here\n\n","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"c60dce","input":"### Column Assignments\n\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"d098ae","input":"Danh & Vicente - age, sex, cp, trestbps\n\nEvan & Alex - fbs, restecg, thalach, exang\n\nSophia & Hikaru -  oldpeak, slope, ca, thal\n\n","pos":11,"type":"cell"}
{"id":0,"time":1657047561774,"type":"user"}
{"last_load":1657051119676,"type":"file"}